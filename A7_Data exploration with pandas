Data Exploration with Pandas

source	source
 
[ ]
 # importing the package(s) we want to use
import pandas as pd
Let's explore the movies data set more!

We'll use the pd.read_csv() function to read the csv file into a DataFrame.

 
[ ]
 csvFile = 'https://raw.githubusercontent.com/csbfx/advpy122-data/master/top_movies_2020.csv'

movies = pd.read_csv(csvFile)
movies.head()
 
Initial data exploration

We can examine the contents of the resultant DataFrame using the head() and tail() commands:

 
[ ]
 ### Take a look at the top 3 values of the file
print(movies.head(3))



                                 Title      Gross  Gross (Adjusted)  Year
0                  Gone with the Wind  200852579        1895421694  1939
1  Star Wars: Episode IV - A New Hope  460998507        1668979715  1977
2                  The Sound of Music  159287539        1335086324  1965
 
[ ]
 ### How about the last 5 values of a the file?
print(movies.tail)
 <bound method NDFrame.tail of                                   Title      Gross  Gross (Adjusted)  Year
0                    Gone with the Wind  200852579        1895421694  1939
1    Star Wars: Episode IV - A New Hope  460998507        1668979715  1977
2                    The Sound of Music  159287539        1335086324  1965
3            E.T. the Extra-Terrestrial  435110554        1329174791  1982
4                               Titanic  659363944        1270101626  1997
..                                  ...        ...               ...   ...
195                              Patton   61749765         373287682  1970
196                    Fatal Attraction  156645693         371808159  1987
197                          Iron Man 2  312433331         371691971  2010
198                            Zootopia  341268248         371109157  2016
199                           Liar Liar  181410615         370330510  1997

[200 rows x 4 columns]>
 
[ ]

Start coding or generate with AI.
Use the info() method to get a quick description of the dataframe

 
[ ]
 ### Get a quick summary of the data using the info() method
movies.info()
 <class 'pandas.core.frame.DataFrame'>
RangeIndex: 200 entries, 0 to 199
Data columns (total 4 columns):
 #   Column            Non-Null Count  Dtype 
---  ------            --------------  ----- 
 0   Title             200 non-null    object
 1   Gross             200 non-null    int64 
 2   Gross (Adjusted)  200 non-null    int64 
 3   Year              200 non-null    int64 
dtypes: int64(3), object(1)
memory usage: 6.4+ KB
Working to filter different elements

Using iloc and loc to extract specific rows and columns

 
[ ]
 ### Get the first 10 elements (movies) of the second column and convert it into a series with a name
ser=movies['Gross'].iloc[:10]
ser
 
 
[ ]
 ### Get the names of the first 10 movies and convert it into a series and give it type string
ser = movies.loc[:10, ]
ser

 
 
[ ]
 ### Create a smaller dataframe with last 20 elements and all columns except 'Year'. Give the columns new custom names (your choice).
movies = movies[(movies['Year'] == 1965) | (movies['Gross'] > 10_000_000_000)]
movies
 
Subsetting the dataframe based on conditions

 
[ ]
 ### Create a smaller dataframe with movies made in the year 2000s
movies_time=movies[movies.Year<=2000]
movies_time
 
 
[ ]
 ### How many movies Gross (use 'Gross (Adjusted)') over 1,500,000,000?
movies_gross = movies [(movies['Gross']>150000000)]
movies_gross
 
Customizing the dataframe

 
[ ]
 ### Use DataFrame.columns to change the column name to 'Movie','Gross', 'Gross_adj', and 'Year'
movies.columns = ['Movie', 'Gross', 'Gross_adj', 'Year']
 
[ ]
 ### Set the 'Movies' column as the index
movies = movies.set_index(movies.columns[0])
movies

 
Double-click (or enter) to edit

Double-click (or enter) to edit

Double-click (or enter) to edit

Getting some statistic about the data

 
[ ]
 ### Get some statistical information about the 'Gross' column
movies['Gross'].min(), movies['Gross'].max()

 (63595658, 159287539)
 
[ ]
### What is the average 'Gross (Adjusted)' value for Movies from the 1990s?mean_gross = movies['Gross'].mean()print(mean_gross)

 111535035.66666667
 
[ ]
### What is the standard deviation of 'Gross (Adjusted)'?std_gross=movies['Gross'].std()print(std_gross)

 47846214.205952436
